	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_blocking_read
_blocking_read:
	ld	hl, -3
	call	__frameset
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
BB0_1:
	call	_usb_HandleEvents
	ld	iy, (ix + 6)
	ld	de, (ix - 3)
	add	iy, de
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	push	iy
	ld	hl, _srl
	push	hl
	call	_srl_Read
	ld	de, 0
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_3
	ld	de, (ix - 3)
	add	iy, de
	lea	hl, iy
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	(ix - 3), iy
	jp	m, BB0_1
	jr	BB0_4
BB0_3:
	ld	iy, -1
BB0_4:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -13
	call	__frameset
	or	a, a
	sbc	hl, hl
	ld	(ix - 10), hl
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	call	_srl_GetCDCStandardDescriptors
	ld	de, 36106
	push	de
	push	hl
	ld	hl, 0
	push	hl
	ld	hl, _handle_usb_event
	push	hl
	call	_usb_Init
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB1_7
	ld	hl, ___const.main.in_buf
	ld	bc, 7
	ld	iy, _.str.1
	lea	de, ix - 7
	ld	(ix - 13), de
	ldir
	ld	hl, _.str.2
	push	hl
	push	iy
	call	_printf
	pop	hl
	pop	hl
	ld	hl, (ix - 13)
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_printf
	pop	hl
	pop	hl
BB1_2:
	call	_kb_Scan
	call	_usb_HandleEvents
	ld	a, (_has_srl_device)
	bit	0, a
	jr	z, BB1_5
	ld	hl, _.str.3
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	hl, 5
	push	hl
	ld	hl, (ix - 13)
	push	hl
	call	_blocking_read
	pop	de
	pop	de
	ld	de, -1
	or	a, a
	sbc	hl, de
	jr	z, BB1_5
	ld	hl, _.str.4
	push	hl
	call	_printf
	pop	hl
	ld	hl, 0
	push	hl
	ld	hl, _.str.5
	push	hl
	call	_os_GetStringData
	push	hl
	pop	iy
	pop	hl
	pop	hl
	ld	hl, (iy)
	ld	de, 0
	ld	e, l
	ld	d, h
	push	de
	pea	iy + 2
	ld	hl, _srl
	push	hl
	call	_srl_Write
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 2
	push	hl
	ld	hl, _EOFstr
	push	hl
	ld	hl, _srl
	push	hl
	call	_srl_Write
	pop	hl
	pop	hl
	pop	hl
BB1_5:
	call	_kb_Scan
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jp	z, BB1_2
	call	_usb_Cleanup
	jr	BB1_9
BB1_7:
	ld	hl, 1
	ld	(ix - 10), hl
	ld	(ix - 13), de
	call	_usb_Cleanup
	ld	hl, (ix - 13)
	push	hl
	ld	hl, _.str
	push	hl
	call	_printf
	pop	hl
	pop	hl
BB1_8:
	call	_kb_Scan
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jr	z, BB1_8
BB1_9:
	ld	hl, (ix - 10)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_handle_usb_event
_handle_usb_event:
	ld	hl, -6
	call	__frameset
	ld	bc, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (ix + 12)
	push	hl
	ld	(ix - 3), de
	push	de
	push	bc
	call	_srl_UsbEventCallback
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB2_17
	ld	de, 1
	ld	hl, (ix + 6)
	or	a, a
	sbc	hl, de
	jr	nz, BB2_4
	ld	hl, (_srl)
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	jp	nz, BB2_17
	ld	hl, _str
	push	hl
	ld	(ix - 6), bc
	call	_puts
	pop	hl
	ld	hl, _srl
	push	hl
	call	_srl_Close
	ld	bc, (ix - 6)
	pop	hl
	xor	a, a
	ld	(_has_srl_device), a
	jp	BB2_17
BB2_4:
	ld	de, 2
	ld	hl, (ix + 6)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), bc
	jr	nz, BB2_7
	call	_usb_GetRole
	ld	bc, (ix - 6)
	ld	a, l
	bit	4, a
	jp	nz, BB2_17
	ld	hl, _str.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix + 9)
	push	hl
	call	_usb_ResetDevice
	ld	bc, (ix - 6)
	pop	hl
	jp	BB2_17
BB2_7:
	ld	de, 4
	ld	hl, (ix + 6)
	or	a, a
	sbc	hl, de
	jp	nz, BB2_10
	call	_usb_GetRole
	ld	iy, _srl
	ld	bc, (ix - 6)
	ld	a, (_has_srl_device)
	bit	4, l
	jp	nz, BB2_17
	or	a, a
	jr	z, BB2_13
	jp	BB2_17
BB2_10:
	ld	de, 12
	ld	hl, (ix + 6)
	or	a, a
	sbc	hl, de
	jr	nz, BB2_17
	ld	a, (_has_srl_device)
	bit	0, a
	jr	nz, BB2_17
	ld	hl, 0
	ld	de, 8
	push	de
	push	hl
	push	hl
	call	_usb_FindDevice
	ld	iy, _srl
	ld	bc, (ix - 6)
	pop	de
	pop	de
	pop	de
	ld	(ix - 3), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_17
BB2_13:
	ld	hl, _srl_buf
	ld	de, 512
	ld	bc, 9600
	push	bc
	ld	bc, -1
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	push	iy
	call	_srl_Open
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_15
	ld	hl, _str.10
	push	hl
	call	_puts
	pop	hl
	ld	a, 1
	ld	(_has_srl_device), a
	jr	BB2_16
BB2_15:
	ld	de, _.str.7
	push	hl
	push	de
	call	_printf
	pop	hl
	pop	hl
BB2_16:
	ld	bc, (ix - 6)
BB2_17:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_has_srl_device
_has_srl_device:
	rb	1

	section	.data,"aw",@progbits
	public	_EOFstr
_EOFstr:
	db	10, 0

	section	.bss,"aw",@nobits
	public	_srl
_srl:
	rb	58

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"usb init error %u", 10, 0

	section	.rodata,"a",@progbits
	private	___const.main.in_buf
___const.main.in_buf:
	db	"     ", 0, 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"%s", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"Empty in_buf is:", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"Waiting for start", 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"Start received, sending str1", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"ª", 0, 0, 0

	section	.bss,"aw",@nobits
	public	_srl_buf
_srl_buf:
	rb	512

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"Error %d initting serial", 10, 0

	section	.rodata,"a",@progbits
	private	_str
_str:
	db	"device disconnected", 0

	section	.rodata,"a",@progbits
	private	_str.10
_str.10:
	db	"serial initialized", 0

	section	.rodata,"a",@progbits
	private	_str.11
_str.11:
	db	"device connected", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	_srl_Open
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_usb_FindDevice
	extern	_srl_Write
	extern	_usb_ResetDevice
	extern	_srl_GetCDCStandardDescriptors
	extern	_srl_Close
	extern	_kb_Scan
	extern	_os_GetStringData
	extern	_os_ClrLCD
	extern	_os_DrawStatusBar
	extern	_puts
	extern	_usb_HandleEvents
	extern	_usb_GetRole
	extern	__setflag
	extern	__Unwind_SjLj_Unregister
	extern	_printf
	extern	_srl_UsbEventCallback
	extern	_srl_Read
	extern	_os_HomeUp
	extern	_usb_Cleanup
	extern	_usb_Init
